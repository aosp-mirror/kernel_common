/*

SiI8558 / SiI8240 Linux Driver

Copyright (C) 2013 Silicon Image, Inc.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation version 2.
This program is distributed AS-IS WITHOUT ANY WARRANTY of any
kind, whether express or implied; INCLUDING without the implied warranty
of MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE or NON-INFRINGEMENT.  See
the GNU General Public License for more details at http://www.gnu.org/licenses/gpl-2.0.html.

*/

/*
 * @file  si_8240_8558_regs.h
 *
 * @brief Register descriptions for the Sil-8240 and Sil-8558
 * MHL transmitter registers.
 */

typedef enum
{
	 TX_PAGE_DDC_SEGM	=	0x60
	,TX_PAGE_L0			=	0x72
	,TX_PAGE_L1			=	0x7A
	,TX_PAGE_2			=	0x92
	,TX_PAGE_3			=	0x9A
	,TX_PAGE_TPI		=	0xB2
	,TX_PAGE_CBUS		=	0xC8
	,TX_PAGE_DDC_EDID	=	0xA0
}slave_addr_t;

#define REG_DEV_IDL										TX_PAGE_L0, 0x02
#define REG_DEV_IDH										TX_PAGE_L0, 0x03
#define REG_DEV_REV										TX_PAGE_L0, 0x04

#define REG_SYS_CTRL1									TX_PAGE_L0, 0x08

#define	REG_DCTL										TX_PAGE_L0, 0x0D
#define		BIT_DCTL_TCLK3X_PHASE						0x01
#define		BIT_DCTL_TLCK_PHASE_MASK					0x02
#define		BIT_DCTL_TLCK_PHASE_NORMAL					0x00
#define		BIT_DCTL_TLCK_PHASE_INVERTED				0x02
#define		BIT_DCTL_TRANSCODE_MASK						0x08
#define		BIT_DCTL_TRANSCODE_OFF						0x00
#define		BIT_DCTL_TRANSCODE_ON						0x08
#define		BIT_DCTL_EXT_DDC_SEL						0x10

#define REG_PWD_SRST									TX_PAGE_L0, 0x0E
#define		BIT_PWD_SRST_SW_RST							0x01
#define		BIT_PWD_SRST_SW_RST_NORMAL					0x00
#define		BIT_PWD_SRST_SW_RST_RESET					0x01
#define		BIT_PWD_MHLFIFO_RST_MASK					0x10
#define		BIT_PWD_MHLFIFO_RST_normal					0x00
#define		BIT_PWD_MHLFIFO_RST_reset					0x10

#define REG_HDCP_CTRL									TX_PAGE_L0, 0x0F
#define		BIT_CP_RESETN_MASK							0x04
#define		BIT_CP_RESETN_RESET							0x00
#define		BIT_CP_RESETN_RELEASE						0x04

#define	TPI_HDCP_RI_LOW_REG								TX_PAGE_L0, 0x22
#define	TPI_HDCP_RI_HIGH_REG							TX_PAGE_L0, 0x23

#define REG_RI_CMD										TX_PAGE_L0, 0x27
#define		BIT_RI_CMD_ENABLE_RI_CHECK_MASK				0x01
#define		BIT_RI_CMD_ENABLE_RI_CHECK_DISABLE			0x00
#define		BIT_RI_CMD_ENABLE_RI_CHECK_ENABLE			0x01

#define REG_PEER_RI_RX_1								TX_PAGE_L0, 0x29

#define REG_HDCP_DEBUG									TX_PAGE_L0, 0x2B
#define		BIT_CP_DEBUG_MASK							0x80
#define		BIT_CP_DEBUG_RESET							0x00
#define		BIT_CP_DEBUG_RELEASE						0x80

#define	REG_HRESL										TX_PAGE_L0, 0x3A
#define	REG_HRESH										TX_PAGE_L0, 0x3B
#define	REG_VRESL										TX_PAGE_L0, 0x3C
#define	REG_VRESH										TX_PAGE_L0, 0x3D

#define	REG_VID_MODE									TX_PAGE_L0, 0x4A
#define		REG_VID_MODE_DEFVAL							0x00
#define		BIT_VID_MODE_m1080p_MASK					0x40
#define		BIT_VID_MODE_m1080p_DISABLE					0x00
#define		BIT_VID_MODE_m1080p_ENABLE					0x40

#define	REG_VID_OVRRD									TX_PAGE_L0, 0x51
#define		REG_VID_OVRRD_DEFVAL						0x80
#define		BIT_VID_OVRRD_3DCONV_EN_MASK				0x10
#define		BIT_VID_OVRRD_3DCONV_EN_NORMAL				0x00
#define		BIT_VID_OVRRD_3DCONV_EN_FRAME_PACK			0x10
#define		BIT_VID_OVRRD_M1080p_ovrrd_MASK				0x40
#define		BIT_VID_OVRRD_M1080p_ovrrd_DISABLE			0x00
#define		BIT_VID_OVRRD_M1080p_ovrrd_ENABLE			0x40

#define	REG_INTR_STATE									TX_PAGE_L0, 0x70

#define	REG_INTR1										TX_PAGE_L0, 0x71
#define		BIT_INTR1_RSEN_CHG							0x20
#define		BIT_INTR1_HPD_CHG							0x40

#define	REG_INTR2										TX_PAGE_L0, 0x72
#define		BIT_INTR2_PSTABLE							0x02

#define	REG_INTR3										TX_PAGE_L0, 0x73

#define	REG_INTR5										TX_PAGE_L0, 0x74
#define		BIT_INTR5_SCDT_CHANGE						0x01
#define		BIT_INTR5_CKDT_CHANGE						0x02
#define		BIT_INTR5_MHL_FIFO_OVERFLOW					0x04
#define		BIT_INTR5_MHL_FIFO_UNDERFLOW				0x08
#define		BIT_INTR5_RPWR5V_CHG						0x10
#define		BIT_INTR5_PQ_OVERFLOW						0x80

#define	REG_INTR1_MASK									TX_PAGE_L0, 0x75
#define	REG_INTR2_MASK									TX_PAGE_L0, 0x76
#define	REG_INTR3_MASK									TX_PAGE_L0, 0x77
#define	REG_INTR5_MASK									TX_PAGE_L0, 0x78

#define	REG_HPD_CTRL									TX_PAGE_L0, 0x79
#define		BIT_HPD_CTRL_HPD_OUT_OVR_EN_MASK			0x10
#define		BIT_HPD_CTRL_HPD_OUT_OVR_EN_OFF				0x00
#define		BIT_HPD_CTRL_HPD_OUT_OVR_EN_ON				0x10
#define		BIT_HPD_CTRL_HPD_OUT_OVR_VAL_MASK			0x20
#define		BIT_HPD_CTRL_HPD_LOW						0x00
#define		BIT_HPD_CTRL_HPD_HIGH						0x20
#define		BIT_HPD_CTRL_HPD_OUT_OD_EN_MASK				0x40
#define		BIT_HPD_CTRL_HPD_OUT_OD_EN_DISABLED			0x00
#define		BIT_HPD_CTRL_HPD_OUT_OD_EN_ENABLED			0x40

#define REG_INTR7										TX_PAGE_L0, 0x7B
#define		BIT_INTR7_MUTE_ON							0x01
#define		BIT_INTR7_CP_NEW_CP							0x02
#define		BIT_INTR7_CP_SET_MUTE						0x04
#define		BIT_INTR7_CP_CLR_MUTE						0x08
#define		BIT_INTR7_CEA_NO_AVI						0x40
#define		BIT_INTR7_CEA_NO_VSI						0x80

#define	REG_INTR8										TX_PAGE_L0, 0x7C
#define		BIT_INTR8_CEA_DET_AIF						0x01
#define		BIT_INTR8_CEA_NEW_AVI						0x02
#define		BIT_INTR8_CEA_NEW_VSI						0x04
#define		BIT_INTR8_CEA_DET_ACP						0x08
#define		BIT_INTR8_CEA_DET_SPD						0x10
#define		BIT_INTR8_CEA_DET_IS_RC1					0x20
#define		BIT_INTR8_CEA_DET_IS_RC2					0x40

#define	REG_INTR7_MASK									TX_PAGE_L0, 0x7D
#define	REG_INTR8_MASK									TX_PAGE_L0, 0x7E

#define	REG_TMDS_CCTRL									TX_PAGE_L0, 0x80
#define		BIT_TMDS_CCTRL_BGRCTL_MASK					0x07
#define		BIT_TMDS_CCTRL_SEL_BGR_MASK					0x08
#define		BIT_TMDS_CCTRL_SEL_BGR						0x08
#define		BIT_TMDS_CCTRL_TMDS_OE_MASK					0x10
#define		BIT_TMDS_CCTRL_TMDS_OE						0x10
#define		BIT_TMDS_CCTRL_CKDT_EN_MASK					0x20
#define		BIT_TMDS_CCTRL_CKDT_EN						0x20

#define	REG_TMDS_CSTAT									TX_PAGE_L0, 0x81
#define		BIT_TMDS_CSTAT_RPWR5V_STATUS				0x04

#define	REG_TMDS_CTRL4									TX_PAGE_L0, 0x85

#define	REG_TXMZ_CTRL2									TX_PAGE_L0, 0xB1

#define	REG_TPI_SEL										TX_PAGE_L0, 0xC7
#define		BIT_TPI_SEL_SW_TPI_EN_MASK					0x80
#define		BIT_TPI_SEL_SW_TPI_EN_HW_TPI				0x00
#define		BIT_TPI_SEL_SW_TPI_EN_NON_HW_TPI			0x80

#define	REG_DDC_STATUS									TX_PAGE_L0, 0xF2
#define		BIT_DDC_STATUS_DDC_NO_ACK					0x20

#define	REG_DDC_CMD										TX_PAGE_L0, 0xF3
#define		BIT_DDC_CMD_COMMAND_MASK					0x0F
#define		BIT_DDC_CMD_COMMAND_ABPRT					0x0F
#define		BIT_DDC_CMD_COMMAND_CLEAR_FIFO				0x09

#define	REG_EPCM										TX_PAGE_L0, 0xFA
#define		BIT_EPCM_LD_KSV_MASK						0x20
#define		BIT_EPCM_LD_KSV_DISABLE						0x00
#define		BIT_EPCM_LD_KSV_ENABLE						0x20

#define	REG_INF_CTRL1									TX_PAGE_L1, 0x3E
#define	REG_INF_CTRL2									TX_PAGE_L1, 0x3F

#define	REG_TMDS0_CCTRL2										TX_PAGE_2, 0x00
#define		BIT_TMDS0_CCTRL2_DC0_CTL_MASK						0x0F
#define		BIT_TMDS0_CCTRL2_DC0_CTL_8BPP_1X_CLK				0x00
#define		BIT_TMDS0_CCTRL2_DC0_CTL_8BPP_2X_CLK				0x02
#define		BIT_TMDS0_CCTRL2_DC0_CTL_10BPP_1X_DEEP_COLOR_CLK	0x04
#define		BIT_TMDS0_CCTRL2_DC0_CTL_12BPP_1X_DEEP_COLOR_CLK	0x05
#define		BIT_TMDS0_CCTRL2_DC0_CTL_10BPP_2X_DEEP_COLOR_CLK	0x06
#define		BIT_TMDS0_CCTRL2_DC0_CTL_12BPP_2X_DEEP_COLOR_CLK	0x07
#define		BIT_TMDS0_CCTRL2_RI_ENABLE_MASK						0x10
#define		BIT_TMDS0_CCTRL2_OFFSET_COMP_EN_MASK				0x20

#define	REG_DVI_CTRL3									TX_PAGE_2, 0x05
#define		BIT_DVI_CTRL3_RI_RST_WDT_MASK				0xFF

#define	REG_TMDS_CLK_EN									TX_PAGE_2, 0x11
#define	REG_TMDS_CH_EN									TX_PAGE_2, 0x12
#define	REG_TMDS_TERMCTRL1								TX_PAGE_2, 0x13
#define	REG_PLL_CALREFSEL								TX_PAGE_2, 0x17
#define	REG_PLL_VCOCAL									TX_PAGE_2, 0x1A
#define	REG_EQ_DATA0									TX_PAGE_2, 0x22
#define	REG_EQ_DATA1									TX_PAGE_2, 0x23
#define	REG_EQ_DATA2									TX_PAGE_2, 0x24
#define	REG_EQ_DATA3									TX_PAGE_2, 0x25
#define	REG_EQ_DATA4									TX_PAGE_2, 0x26
#define	REG_EQ_DATA5									TX_PAGE_2, 0x27
#define	REG_EQ_DATA6									TX_PAGE_2, 0x28
#define	REG_EQ_DATA7									TX_PAGE_2, 0x29
#define	REG_BW_I2C										TX_PAGE_2, 0x31
#define	REG_EQ_PLL_CTRL1								TX_PAGE_2, 0x45
#define	REG_MON_USE_COMP_EN								TX_PAGE_2, 0x4B

#define	REG_ZONE_CTRL_SW_RST							TX_PAGE_2, 0x4C
#define		BIT_ZONE_CTRL_SW_RST_SZONE_I2C_MASK			0x30

#define	REG_MODE_CONTROL								TX_PAGE_2, 0x4D

#define	REG_MHLTX_CTL1									TX_PAGE_2, 0x80
#define		BIT_MHLTX_CTL1_VCO_FMAX_CTL_MASK			0x0F
#define		BIT_MHLTX_CTL1_DISC_OVRIDE_MASK				0x10
#define		BIT_MHLTX_CTL1_DISC_OVRIDE_OFF				0x00
#define		BIT_MHLTX_CTL1_DISC_OVRIDE_ON				0x10
#define		BIT_MHLTX_CTL1_TX_TERM_MODE_MASK			0xC0
#define		BIT_MHLTX_CTL1_TX_TERM_MODE_100DIFF			0x00
#define		BIT_MHLTX_CTL1_TX_TERM_MODE_150DIFF			0x40
#define		BIT_MHLTX_CTL1_TX_TERM_MODE_300DIFF			0x80
#define		BIT_MHLTX_CTL1_TX_TERM_MODE_OFF				0xC0

#define	REG_MHLTX_CTL2									TX_PAGE_2, 0x81
#define		REG_MHLTX_CTL2_DEFVAL						0x3C
#define		BIT_MHL_TX_CTL2_TX_OE_MASK					0x3F

#define	REG_MHLTX_CTL3									TX_PAGE_2, 0x82
#define		REG_MHLTX_CTL3_DEFVAL						0x00
#define		BIT_MHLTX_CTL3_DAMPING_SEL_MASK				0x30
#define		BIT_MHLTX_CTL3_DAMPING_SEL_OFF				0x00
#define		BIT_MHLTX_CTL3_DAMPING_SEL_300_OHM			0x10
#define		BIT_MHLTX_CTL3_DAMPING_SEL_150_OHM			0x20
#define		BIT_MHLTX_CTL3_DAMPING_SEL_75_OHM			0x30

#define	REG_MHLTX_CTL4									TX_PAGE_2, 0x83
#define		BIT_DATA_SWING_CTL_MASK						0x07
#define		BIT_CLK_SWING_CTL_MASK						0x38
#define		BIT_MHLTX_CTL4_MHL_CLK_RATIO_MASK			0x40
#define		BIT_MHLTX_CTL4_MHL_CLK_RATIO_2X				0x00
#define		BIT_MHLTX_CTL4_MHL_CLK_RATIO_3X				0x40

#define	REG_MHLTX_CTL5									TX_PAGE_2, 0x84
#define	REG_MHLTX_CTL6									TX_PAGE_2, 0x85
#define	REG_MHLTX_CTL7									TX_PAGE_2, 0x86

#define	REG_MHLTX_CTL8									TX_PAGE_2, 0x87
#define		REG_MHLTX_CTL8_NEWDEFVAL					0x02                    /* TB - Changed Default value from 0x0A to 0x02, since bit 3 is reserved. */
#define		BIT_MHLTX_CTL8_PLL_BW_CTL_MASK				0x07

#define	REG_PKT_FILTER_0								TX_PAGE_2, 0x90
#define		BIT_PKT_FILTER_0_DROP_GCP_PKT				0x01
#define		BIT_PKT_FILTER_0_DROP_CTS_PKT				0x02
#define		BIT_PKT_FILTER_0_DROP_AVI_PKT				0x04
#define		BIT_PKT_FILTER_0_DROP_AIF_PKT				0x08
#define		BIT_PKT_FILTER_0_DROP_SPIF_PKT				0x10
#define		BIT_PKT_FILTER_0_DROP_MPEG_PKT				0x20
#define		BIT_PKT_FILTER_0_DROP_CEA_CP_PKT			0x40
#define		BIT_PKT_FILTER_0_DROP_CEA_GAMUT_PKT			0x80

#define	REG_PKT_FILTER_1								TX_PAGE_2, 0x91
#define		BIT_PKT_FILTER_1_VSI_OVR_DIS				0x80

#define	REG_TMDS_CSTAT_P3								TX_PAGE_2, 0xA0
#define		BIT_TMDS_CSTAT_P3_PDO_MASK					0x01
#define		BIT_TMDS_CSTAT_P3_PDO_CLOCK_STOPPED			0x00
#define		BIT_TMDS_CSTAT_P3_PDO_CLOCK_DETECTED		0x01
#define		BIT_TMDS_CSTAT_P3_SCDT						0x02

#define	REG_RX_HDMI_CTRL0										TX_PAGE_2, 0xA1
#define		REG_RX_HDMI_CTRL0_DEFVAL								0x10
#define		BIT_REG_RX_HDMI_CTRL0_RX_HDMI_HDMI_MODE_MASK			0x01
#define		BIT_REG_RX_HDMI_CTRL0_RX_HDMI_HDMI_MODE_EN_MASK			0x02
#define		BIT_REG_RX_HDMI_CTRL0_HDMI_MODE_OVERWRITE_MASK			0x04
#define		BIT_REG_RX_HDMI_CTRL0_HDMI_MODE_OVERWRITE_HW_CTRL		0x00
#define		BIT_REG_RX_HDMI_CTRL0_HDMI_MODE_OVERWRITE_SW_CTRL		0x04
#define		BIT_REG_RX_HDMI_CTRL0_HDMI_MODE_SW_VALUE_MASK			0x08
#define		BIT_REG_RX_HDMI_CTRL0_HDMI_MODE_SW_VALUE_DVI			0x00
#define		BIT_REG_RX_HDMI_CTRL0_HDMI_MODE_SW_VALUE_HDMI			0x08
#define		BIT_REG_RX_HDMI_CTRL0_RI_HDMI_MODE_EN_ITSELF_CLR_MASK	0x10
#define		BIT_REG_RX_HDMI_CTRL0_BYP_DVIFILT_SYNC_MASK				0x20

#define	REG_RX_HDMI_CTRL2									TX_PAGE_2, 0xA3
#define		REG_RX_HDMI_CTRL2_DEFVAL_DVI					0x30
#define		REG_RX_HDMI_CTRL2_DEFVAL_HDMI					0x38
#define		BIT_RX_HDMI_CTRL2_VSI_MON_SEL_MASK				0x01
#define		BIT_RX_HDMI_CTRL2_VSI_MON_SEL_AVI_INFOFRAME		0x00
#define		BIT_RX_HDMI_CTRL2_VSI_MON_SEL_VS_INFOFRAME		0x01
#define		BIT_RX_HDMI_CTRL2_USE_AV_MUTE_SUPPORT_MASK		0x08
#define		BIT_RX_HDMI_CTRL2_USE_AV_MUTE_SUPPORT_DISABLE	0x00
#define		BIT_RX_HDMI_CTRL2_USE_AV_MUTE_SUPPORT_ENABLE	0x08
#define		BIT_RX_HDMI_CTRL2_IDLE_CNT_3_0_MASK				0xF0
#define		BIT_RX_HDMI_CTRL2_IDLE_CNT_3_0_VAL_0			0x00
#define		BIT_RX_HDMI_CTRL2_IDLE_CNT_3_0_VAL_1			0x10
#define		BIT_RX_HDMI_CTRL2_IDLE_CNT_3_0_VAL_2			0x20
#define		BIT_RX_HDMI_CTRL2_IDLE_CNT_3_0_VAL_3			0x30
#define		BIT_RX_HDMI_CTRL2_IDLE_CNT_3_0_VAL_4			0x40
#define		BIT_RX_HDMI_CTRL2_IDLE_CNT_3_0_VAL_5			0x50
#define		BIT_RX_HDMI_CTRL2_IDLE_CNT_3_0_VAL_6			0x60
#define		BIT_RX_HDMI_CTRL2_IDLE_CNT_3_0_VAL_7			0x70
#define		BIT_RX_HDMI_CTRL2_IDLE_CNT_3_0_VAL_8			0x80
#define		BIT_RX_HDMI_CTRL2_IDLE_CNT_3_0_VAL_9			0x90
#define		BIT_RX_HDMI_CTRL2_IDLE_CNT_3_0_VAL_A			0xA0
#define		BIT_RX_HDMI_CTRL2_IDLE_CNT_3_0_VAL_B			0xB0
#define		BIT_RX_HDMI_CTRL2_IDLE_CNT_3_0_VAL_C			0xC0
#define		BIT_RX_HDMI_CTRL2_IDLE_CNT_3_0_VAL_D			0xD0
#define		BIT_RX_HDMI_CTRL2_IDLE_CNT_3_0_VAL_E			0xE0
#define		BIT_RX_HDMI_CTRL2_IDLE_CNT_3_0_VAL_F			0xF0

#define	REG_RX_HDMI_CTRL3								TX_PAGE_2, 0xA4
#define	REG_RX_HDMI_CTRL4								TX_PAGE_2, 0xA5

#define	REG_HDMI_BCH_CORRECTED_THRESHOLD				TX_PAGE_2, 0xAB

#define	REG_HDMI_CLR_BUFFER										TX_PAGE_2, 0xAC
#define		REG_HDMI_CLR_BUFFER_DEFVAL							0x00
#define		BIT_HDMI_CLR_BUFFER_RX_HDMI_VSI_CLR_EN_MASK			0x01
#define		BIT_HDMI_CLR_BUFFER_RX_HDMI_VSI_CLR_EN_STALE		0x00
#define		BIT_HDMI_CLR_BUFFER_RX_HDMI_VSI_CLR_EN_CLEAR		0x01
#define		BIT_HDMI_CLR_BUFFER_RX_HDMI_VSI_CLR_W_AVI_EN_MASK	0x10
#define		BIT_HDMI_CLR_BUFFER_RX_HDMI_VSI_CLR_W_AVI_EN_STALE	0x00
#define		BIT_HDMI_CLR_BUFFER_RX_HDMI_VSI_CLR_W_AVI_EN_CLEAR	0x10

#define	REG_RX_HDMI_MON_PKT_HEADER1						TX_PAGE_2, 0xB8

#define	REG_INTR9										TX_PAGE_2, 0xE0
#define		BIT_INTR9_DEVCAP_DONE_MASK					0x10
#define		BIT_INTR9_DEVCAP_DONE						0x10
#define		BIT_INTR9_EDID_DONE_MASK					0x20
#define		BIT_INTR9_EDID_DONE							0x20
#define		BIT_INTR9_EDID_ERROR						0x40

#define	REG_INTR9_MASK									TX_PAGE_2, 0xE1

#define	REG_TPI_CBUS_START								TX_PAGE_2, 0xE2
#define		BIT_TPI_CBUS_START_DEVCAP_READ_START		0x01
#define		BIT_TPI_CBUS_START_EDID_READ_BLOCK_0		0x02

#define	REG_EDID_CTRL									TX_PAGE_2, 0xE3
#define		BIT_EDID_CTRL_EDID_MODE_EN_MASK				0x01
#define		BIT_EDID_CTRL_EDID_MODE_EN_DISABLE			0x00
#define		BIT_EDID_CTRL_EDID_MODE_EN_ENABLE			0x01
#define		BIT_EDID_CTRL_INVALID_BKSV_MASK				0x02
#define		BIT_EDID_CTRL_INVALID_BKSV_NAK				0x00
#define		BIT_EDID_CTRL_INVALID_BKSV_ENABLE			0x02
#define		BIT_EDID_CTRL_EDID_FIFO_ADDR_AUTO_MASK		0x10
#define		BIT_EDID_CTRL_EDID_FIFO_ADDR_AUTO_DISABLE	0x00
#define		BIT_EDID_CTRL_EDID_FIFO_ADDR_AUTO_ENABLE	0x10
#define		BIT_EDID_CTRL_FIFO_SELECT_MASK				0x20
#define		BIT_EDID_CTRL_FIFO_SELECT_EDID				0x00
#define		BIT_EDID_CTRL_FIFO_SELECT_DEVCAP			0x20
#define		BIT_EDID_CTRL_EDID_PRIME_VALID_MASK			0x80
#define		BIT_EDID_CTRL_EDID_PRIME_VALID_DISABLE		0x00
#define		BIT_EDID_CTRL_EDID_PRIME_VALID_ENABLE		0x80

#define	REG_EDID_STAT									TX_PAGE_2, 0xE4
#define		BIT_EDID_STAT_DEVCAP_VALID_MASK				0x02
#define		BIT_EDID_STAT_DEVCAP_VALID_VALID			0x02
#define		BIT_EDID_STAT_DEVCAP_VALID_INVALID			0x00
#define		BIT_EDID_STAT_TPI_CBUS_BUSY_MASK			0x10
#define		BIT_EDID_STAT_TPI_CBUS_BUSY_BUSY			0x10
#define		BIT_EDID_STAT_TPI_CBUS_BUSY_IDLE			0x10

#define	REG_CBUS_LINK_MODE								TX_PAGE_2, 0xE5
#define	REG_EDID_FIFO_ADDR								TX_PAGE_2, 0xE9
#define	REG_EDID_FIFO_WR_DATA							TX_PAGE_2, 0xEA
#define	REG_EDID_FIFO_RD_DATA							TX_PAGE_2, 0xEC

#define	REG_EDID_HW_ASSIST_READ_BLOCK_ADDR				TX_PAGE_2, 0xED
#define		BIT_HW_ASSIST_EDID_READ_BLOCK1				0x01
#define		BIT_HW_ASSIST_EDID_READ_BLOCK2				0x02
#define		BIT_HW_ASSIST_EDID_READ_BLOCK3				0x04

#define REG_RI_LOCAL_OR_REMOTE							TX_PAGE_2, 0xFC

#define	REG_SRST										TX_PAGE_3, 0x00

#define	REG_POWER_CTRL									TX_PAGE_3, 0x01
#define	BIT_MASTER_POWER_CTRL							(1 << 0)
#define	BIT_PCLK_EN										(1 << 2)
#define	BIT_ISO_EN										(1 << 3)
#define	BIT_OSC_EN										(1 << 4)
#define	BIT_PDNRX12										(1 << 5)
#define	BIT_PDNTX12										(1 << 6)


#define REG_DEV_IDL_AON									TX_PAGE_3, 0x02
#define REG_DEV_IDH_AON									TX_PAGE_3, 0x03
#define	REG_DEV_REV_AON									TX_PAGE_3, 0x04

#define	REG_POWER_STAT									TX_PAGE_3, 0x05
#define		BIT_POWER_STAT_I2C_RETAIN					0x80

#define REG_BC_CTRL_1									TX_PAGE_3, 0x0A
#define 	BIT_BC_CTRL_1_MANUAL_START					0x80

#define REG_BC_CTRL_2									TX_PAGE_3, 0x0B
#define		BIT_BC_CTRL_2_FORCE_SPECIAL_MODE			0x10


#define REG_BC_OVR_CTRL									TX_PAGE_3, 0x0C
#define		BIT_BC_OVR_CTRL_BC_FW_RDY					0x10

#define REG_BC_CORE_RESULTS								TX_PAGE_3,0x0D
#define     BIT_BC_CORE_RESULTS_PS2_PORT_DETECTED			0x04
#define     BIT_BC_CORE_RESULTS_STANDARD_DS_PORT_DETECTED	0x08
#define     BIT_BC_CORE_RESULTS_CHARGING_DS_PORT_DETECTED	0x10
#define     BIT_BC_CORE_RESULTS_DEDICATED_DS_PORT_DETECTED	0x20
#define     BIT_BC_CORE_RESULTS_NO_RECOGNIZED_DS_PORT		0x80

#define REG_BC_CORE_RESULTS_2							TX_PAGE_3,0x0E
#define		BIT_BC_CORE_RESULTS_2_SONY_DET					0x01
#define		BIT_BC_CORE_RESULTS_2_APPLE_05_DET				0x02
#define		BIT_BC_CORE_RESULTS_2_APPLE_10_DET				0x04

#define	REG_DISC_CTRL1									TX_PAGE_3, 0x10
#define		VAL_DISC_CTRL1_DEFAULT						0x24
#define		BIT_DISC_CTRL1_MHL_DISCOVERY_ENABLE			0x01
#define		BIT_DISC_CTRL1_STROBE_OFF					0x02

#define	REG_DISC_CTRL2									TX_PAGE_3, 0x11
/*
#define	REG_DISC_CTRL3									TX_PAGE_3, 0x12
#define		BIT_DC3_DEFAULT								0x86
*/
#define	REG_DISC_CTRL3									TX_PAGE_3, 0x12
#define	REG_DISC_CTRL4									TX_PAGE_3, 0x13
#define	REG_DISC_CTRL5									TX_PAGE_3, 0x14

#define	REG_DISC_CTRL6									TX_PAGE_3, 0x15
#define		BIT_DC6_USB_OVERRIDE_MASK					0x40
#define		BIT_DC6_USB_OVERRIDE_OFF					0x00
#define		BIT_DC6_USB_OVERRIDE_ON						0x40

#define	REG_DISC_CTRL7									TX_PAGE_3, 0x16
#define	REG_DISC_CTRL8									TX_PAGE_3, 0x17

#define	REG_DISC_CTRL9									TX_PAGE_3, 0x18
#define		BIT_DC9_VBUS_OUTPUT_CAPABILITY_SRC			0x01
#define		BIT_DC9_WAKE_PULSE_BYPASS					0x02
#define		BIT_DC9_DISC_PULSE_PROCEED					0x04
#define		BIT_DC9_USB_EST								0x08
#define		BIT_DC9_WAKE_DRVFLT							0x10
#define		BIT_DC9_CBUS_LOW_TO_DISCONNECT				0x20
#define		BIT_DC9_VBUS_EN_OVERRIDE					0x40
#define		BIT_DC9_VBUS_EN_OVERRIDE_VAL				0x80

#define	REG_DISC_CTRL10									TX_PAGE_3, 0x19
#define	REG_DISC_CTRL11									TX_PAGE_3, 0x1A
#define	REG_DISC_STAT									TX_PAGE_3, 0x1B
#define	REG_DISC_STAT2									TX_PAGE_3, 0x1C
#define	REG_INT_CTRL									TX_PAGE_3, 0x20

#define	REG_INTR4_PAGE									TX_PAGE_3
#define REG_INTR4_OFFSET								0x21
#define	REG_INTR4										TX_PAGE_3, 0x21
#define		BIT_INTR4_VBUS_CHG							0x01
#define		BIT_INTR4_MHL_EST							0x04
#define		BIT_INTR4_NON_MHL_EST						0x08
#define		BIT_INTR4_CBUS_LKOUT						0x10
#define		BIT_INTR4_CBUS_DISCONNECT					0x20
#define		BIT_INTR4_RGND_DETECTION					0x40
#define		BIT_INTR4_SOFT								0x80

/* On 8558 page 3 offset 0x21 is DISC_INT register */
#define	REG_DISC_INT									TX_PAGE_3, 0x21
#define		BIT_MHL_EST_INT								0x04
#define		BIT_NON_MHL_EST_INT							0x08
#define		BIT_CBUS_DISCON_INT							0x20
#define		BIT_CBUS_RID_DONE_INT						0x40
#define		BIT_SOFT_INT								0x80

#define	REG_INTR4_MASK									TX_PAGE_3, 0x22
#define		BIT_MHL_EST_INT_MASK						0x04
#define		BIT_NON_MHL_EST_INT_MASK					0x08
#define		BIT_CBUS_DISCON_INT_MASK					0x20
#define		BIT_CBUS_RID_DONE_INT_MASK					0x40
#define		BIT_SOFT_INT_MASK							0x80

#define	REG_ASW_INT0									TX_PAGE_3, 0x23
#define		BIT_RID_MSR_DONE_INT						0x01
#define		BIT_RID_MSR_ERR_INT							0x02
#define		BIT_RSTRAP_MSR_DONE_INT						0x04
#define		BIT_ASW_ATTACH_INT							0x10
#define		BIT_ASW_DETACH_INT							0x20
#define		BIT_BC_DONE_INT								0x80

#define	REG_ASW_INT0_MASK								TX_PAGE_3, 0x24

#define REG_ASW_INT1									TX_PAGE_3, 0x25
#define		BIT_VBUS_CHG_INT							0x01
#define		BIT_ID_CHG_INT								0x02
#define		BIT_ADC_CHG_INT								0x04
#define		BIT_WKUP_HIGH_INT							0x08
#define		BIT_OVP_INT									0x10
#define		BIT_SHORT_KEY_PRESSED_INT					0x20
#define		BIT_LONG_KEY_PRESSED_INT					0x40
#define		BIT_LONG_KEY_RELEASED_INT					0x80

#define	REG_ASW_INT1_MASK								TX_PAGE_3, 0x26
#define		BIT_VBUS_CHG_INT_MASK						0x01
#define		BIT_ID_CHG_INT_MASK							0x02
#define		BIT_ADC_CHG_INT_MASK						0x04
#define		BIT_WKUP_HIGH_INT_MASK						0x08
#define		BIT_OVP_INT_MASK							0x10
#define		BIT_SHORT_KEY_PRESSED_INT_MASK				0x20
#define		BIT_LONG_KEY_PRESSED_INT_MASK				0x40
#define		BIT_LONG_KEY_RELEASED_INT_MASK				0x80

#define REG_ASW_INT4_MASK								TX_PAGE_3,0x2B

#define	REG_8240_USB_CHARGE_PUMP						TX_PAGE_3, 0x30
#define REG_8558_MHLTX_CFG_TERM							TX_PAGE_3, 0x30
#define 	BIT_8558_CLK_TERM_SEL_MASK					0x30
#define		BIT_8558_CLK_TERM_SEL_OFF					0x00
#define		BIT_8558_CLK_TERM_SEL_200_OHM				0x10
#define		BIT_8558_CLK_TERM_SEL_100_OHM				0x20
#define		BIT_8558_CLK_TERM_SEL_67_OHM				0x30
#define		BIT_8558_DATA_TERM_SEL_MASK					0xC0
#define		BIT_8558_DATA_TERM_SEL_OFF					0x00
#define		BIT_8558_DATA_TERM_SEL_DIFFERENTIAL_100		0x40

/* Remaining page 3 registers are not implemented on the Sil-8240 */
#define	REG_MHLTX_CFG_TERM								TX_PAGE_3, 0x30

#define REG_MHLTX_CFG_OE								TX_PAGE_3, 0x31
#define MSK_MHLTX_CFG_OE								0x3F
#define VAL_MHLTX_CFG_OE_ENABLE							0x3C
#define VAL_MHLTX_CFG_OE_FLOAT							0x00

#define	REG_MHLTX_CTRL_AON								TX_PAGE_3, 0x32

#define REG_ASW_CTRL								TX_PAGE_3, 0x40
#define BIT_ASW_CTRL_MODE_MASK							0x80
#define BIT_ASW_CTRL_MODE_AUTOMATIC						0x00
#define BIT_ASW_CTRL_MODE_MANUAL						0x80
#define BIT_ASW_CTRL_RID_MEASUREMENT_REQUEST_STROBE		0x10
#define BIT_ASW_CTRL_ASW_TURN_OFF						0x01

#define	REG_ASW_MANUAL_CTRL								TX_PAGE_3, 0x41
#define		BIT_ASW_MAN_CTRL_USB_ID_ON					0x01
#define		BIT_ASW_MAN_CTRL_USB_D_ON					0x02

#define		BIT_ASW_MAN_CTRL_UART_ON					0x08
#define		BIT_ASW_MAN_CTRL_AUDIO_ON					0x10
#define		BIT_ASW_MAN_CTRL_MIC_VBUS_ON				0x20
#define		BIT_ASW_MAN_CTRL_MIC_ID_ON					0x40
#define		BIT_ASW_MAN_CTRL_AUD_POPRES_ON				0x80

#define	REG_AUDIO_POLL_CTRL								TX_PAGE_3, 0x42
#define		BIT_AUDIO_POLL_EN							0x01
#define		BIT_AUDIO_POLL_START						0x02
#define		BIT_AUDIO_POLL_INT_LSB						0x10
#define		BIT_AUDIO_POLL_INT_MSB						0x20

#define	REG_AUDIO_POLL_BLOCK							TX_PAGE_3, 0x43
#define		MSK_AUDIO_POLL_SK_LENGTH					0x0F
#define		MSK_AUDIO_POLL_LK_LENGTH					0xF0

#define	REG_ADC_R_VALUE									TX_PAGE_3, 0x45
#define		MSK_ADC_MEAS_VALUE							0x1F
#define		BIT_ADC_VALUE_MHL							0x20
#define		BIT_ADC_VALUE_VALID							0x80

#define	REG_ADC_R_TABLE									TX_PAGE_3, 0x46
#define 	MSK_ADC_R_TABLE								0x03

#define REG_ASW_MON										TX_PAGE_3, 0x47
#define 	MSK_ASW_MON_ASW								0x0F
#define		BIT_ASW_MON_SWITCH_OFF						0x08
#define		BIT_ASW_MON_USB_BYPASS						0x10

#define REG_AUD_POLL_DEFAULT_VAL						TX_PAGE_3, 0x48

#define	REG_AUDIO_POLL_STAT0							TX_PAGE_3, 0x49
#define		MSK_AUDIO_POLL_SKP_IMPED_VAL				0x3E

#define	REG_AUDIO_POLL_STAT1							TX_PAGE_3, 0x4A
#define		MSK_AUDIO_POLL_LKP_IMPED_VAL				0x3E

#define	REG_PIN_MON										TX_PAGE_3, 0x4B
#define		BIT_PIN_STATUS_VBUS							0x01
#define		BIT_PIN_STATUS_ID							0x02
#define		BIT_PIN_STATUS_WAKEUP						0x08
#define		BIT_PIN_STATUS_VBAT							0x10
#define		BIT_PIN_STATUS_IOVCC						0x20

#define	REG_OVP_MON										TX_PAGE_3, 0x4C
#define		BIT_OVP_DET_VBUS							0x01
#define		BIT_OVP_DET_CBUSID							0x02
#define		BIT_OVP_DET_MHLD_DET						0x04
#define		BIT_OVP_DET_MHLDB_DET						0x08

#define	REG_ASW_TEST_CTRL								TX_PAGE_3, 0x50
#define BIT_ASWTEST_DEFAULT					0xA0
#define		MSK_ADC_MEAS_NUM							0xC0
#define		VAL_ADC_MEAS_1_TIME							0x00
#define		VAL_ADC_MEAS_2_TIMES						0x40
#define		VAL_ADC_MEAS_3_TIMES						0x80
#define		VAL_ADC_MEAS_4_TIMES						0xC0
#define		MSK_ADC_RETRY_LIMIT							0x30
#define		VAL_ADC_RETRY_0_TIMES						0x00
#define		VAL_ADC_RETRY_4_TIMES						0x10
#define		VAL_ADC_RETRY_8_TIMES						0x20
#define		VAL_ADC_RETRY_12_TIMES						0x30
#define		BIT_ID_DEGLITCH_PAUSE_ENABLE				0x08
#define		BIT_ASW_TEST_CTRL_ASW_FORCE_MODE			0x02
#define		BIT_RET_ADDR_CLR							0x01

#define	REG_RET_MON0									TX_PAGE_3, 0x52
#define BIT_RET_MON0_MEAS_BC_CTRL_MASK					0xC0
#define		BIT_RET_MON0_BC_CTRL_VBAT						0x00
#define		BIT_RET_MON0_BC_CTRL_FW_TRIG					0x40
#define		BIT_RET_MON0_BC_CTRL_BYPASS						0x80
#define		BIT_RET_MON0_BC_CTRL_RESERVED					0xC0
#define	BIT_RET_MON0_RETREG_DATA_VALID					0x20
#define	BIT_RET_MON0_BOOT_USB_CTRL_MASK					0x1F


#define	REG_RET_MON1									TX_PAGE_3, 0x53
#define BIT_RET_MON1_MEAS_RID_CTRL_MASK					0xC0
#define	BIT_RET_MON1_RID_CTRL_MASK						0xC0
#define BIT_REG_MON2_BOOT_UART_CTRL_MASK						0x1F

#define REG_STR_MON0									TX_PAGE_3, 0x54


#define REG_STR_MON1									TX_PAGE_3, 0x55
#define BIT_RET_MON0_MEAS_BOOT_USB_MASK					0x3F

#define REG_STR_MON2									TX_PAGE_3, 0x56
#define BIT_RET_MON1_MEAS_BOOT_UART_MASK				0x3F

#define REG_RETENTION_WRITE								TX_PAGE_3, 0x57
#define REG_RETENTION_READ								TX_PAGE_3, 0x58

#define REG_ASW_ANA_CTRL								TX_PAGE_3, 0x59
#define 	BIT_ASW_ANA_CTRL_ID_PULLUP_ON_OFF_MASK			0x01


#define REG_ASW_DBG1									TX_PAGE_3, 0x5B
/* the bit above is some times inverted, so no static definition here */

#define REG_RID2										TX_PAGE_3, 0xE2
#define DEF_VAL_RID2									0x60
#define BIT_RID2_STRICT_ERROR_MASK						0x40
#define BIT_RID2_STRICT_ERROR_LOOSE						0x00
#define BIT_RID2_STRICT_ERROR_STRICT					0x40


#define REG_RID8										TX_PAGE_3, 0xE8
typedef enum {
	  BIT_RID8_FW_ADC_OVR         = 0x01
	 ,BIT_RID8_FW_ADC_ENABLE      = 0x02
	 ,BIT_RID8_FW_ADC_STROBE      = 0x04
	 ,BITS_RID8_FW_ADC_SEL_MASK   = 0x38
	 ,BIT_RID8_FW_ADC_SEL_BC_CTRL = 0x08
	 ,BIT_RID8_FW_ADC_SEL_ID      = 0x20
	 ,BITS_RID8_FW_ADC_R_REF_MASK = 0xC0
} RID8_bits_e;


#define REG_RID9										TX_PAGE_3, 0xE9
typedef enum{
	 BITS_RID9_FW_ADC_SEL_RES_MASK	= 0x3F
	,BITS_RID9_RESERVED_THRESHOLD			= 0x30
	,BITS_RID9_BYPASS_THRESHOLD				= 0x28
	,BITS_RID9_FW_TRIG_THRESHOLD			= 0x20
	,BITS_RID9_VBAT_THRESHOLD				= 0x10
}RID9_bits_e;

#define REG_RIDB										TX_PAGE_3, 0xEB
/*
 * CBUS register definitions
 */
#define	REG_CBUS_DEVICE_CAP_0							TX_PAGE_CBUS, 0x00
#define	REG_CBUS_DEVICE_CAP_1							TX_PAGE_CBUS, 0x01
#define	REG_CBUS_DEVICE_CAP_2							TX_PAGE_CBUS, 0x02
#define	REG_CBUS_DEVICE_CAP_3							TX_PAGE_CBUS, 0x03
#define	REG_CBUS_DEVICE_CAP_4							TX_PAGE_CBUS, 0x04
#define	REG_CBUS_DEVICE_CAP_5							TX_PAGE_CBUS, 0x05
#define	REG_CBUS_DEVICE_CAP_6							TX_PAGE_CBUS, 0x06
#define	REG_CBUS_DEVICE_CAP_7							TX_PAGE_CBUS, 0x07
#define	REG_CBUS_DEVICE_CAP_8							TX_PAGE_CBUS, 0x08
#define	REG_CBUS_DEVICE_CAP_9							TX_PAGE_CBUS, 0x09
#define	REG_CBUS_DEVICE_CAP_A							TX_PAGE_CBUS, 0x0A
#define	REG_CBUS_DEVICE_CAP_B							TX_PAGE_CBUS, 0x0B
#define	REG_CBUS_DEVICE_CAP_C							TX_PAGE_CBUS, 0x0C
#define	REG_CBUS_DEVICE_CAP_D							TX_PAGE_CBUS, 0x0D
#define	REG_CBUS_DEVICE_CAP_E							TX_PAGE_CBUS, 0x0E
#define	REG_CBUS_DEVICE_CAP_F							TX_PAGE_CBUS, 0x0F
#define	REG_CBUS_COMMON_CONFIG							TX_PAGE_CBUS, 0x07

#define	REG_CBUS_SET_INT_0								TX_PAGE_CBUS, 0x20
#define	REG_CBUS_SET_INT_1								TX_PAGE_CBUS, 0x21
#define	REG_CBUS_SET_INT_2								TX_PAGE_CBUS, 0x22
#define	REG_CBUS_SET_INT_3								TX_PAGE_CBUS, 0x23

#define	REG_CBUS_WRITE_STAT_0							TX_PAGE_CBUS, 0x30
#define	REG_CBUS_WRITE_STAT_1							TX_PAGE_CBUS, 0x31
#define	REG_CBUS_WRITE_STAT_2							TX_PAGE_CBUS, 0x32
#define	REG_CBUS_WRITE_STAT_3							TX_PAGE_CBUS, 0x33

#define	REG_CBUS_MHL_SCRPAD_BASE						0x40
#define	REG_CBUS_MHL_SCRPAD_0							TX_PAGE_CBUS, 0x40
#define	REG_CBUS_WB_XMIT_DATA_0							TX_PAGE_CBUS, 0x60
#define	REG_CBUS_WB_XMIT_DATA_1							TX_PAGE_CBUS, 0x61
#define	REG_CBUS_WB_XMIT_DATA_2							TX_PAGE_CBUS, 0x62

#define	REG_CBUS_SET_INT_ENABLE_0						TX_PAGE_CBUS, 0x80
#define	REG_CBUS_SET_INT_ENABLE_1						TX_PAGE_CBUS, 0x81
#define	REG_CBUS_SET_INT_ENABLE_2						TX_PAGE_CBUS, 0x82
#define	REG_CBUS_SET_INT_ENABLE_3						TX_PAGE_CBUS, 0x83

#define	REG_CBUS_MDT_RCV_TIMEOUT						TX_PAGE_CBUS, 0x84
#define	REG_CBUS_MDT_XMIT_TIMEOUT						TX_PAGE_CBUS, 0x85

#define	REG_CBUS_MDT_RCV_CONTROL							TX_PAGE_CBUS, 0x86
#define		BIT_CBUS_MDT_RCV_CONTROL_RFIFO_CLR_CUR_MASK		0x01
#define		BIT_CBUS_MDT_RCV_CONTROL_RFIFO_CLR_CUR_NOP		0x00
#define		BIT_CBUS_MDT_RCV_CONTROL_RFIFO_CLR_CUR_CLEAR	0x01
#define		BIT_CBUS_MDT_RCV_CONTROL_RFIFO_CLR_ALL_MASK		0x02
#define		BIT_CBUS_MDT_RCV_CONTROL_RFIFO_CLR_ALL_NOP		0x00
#define		BIT_CBUS_MDT_RCV_CONTROL_RFIFO_CLR_ALL_CLEAR	0x02
#define		BIT_CBUS_MDT_RCV_CONTROL_MDT_DISABLE_MASK		0x04
#define		BIT_CBUS_MDT_RCV_CONTROL_MDT_DISABLE_ENABLED	0x00
#define		BIT_CBUS_MDT_RCV_CONTROL_MDT_DISABLE_RESET		0x04
#define		BIT_CBUS_MDT_RCV_CONTROL_XFIFO_OVRWR_EN_MASK	0x08
#define		BIT_CBUS_MDT_RCV_CONTROL_XFIFO_OVRWR_EN_STALL	0x00
#define		BIT_CBUS_MDT_RCV_CONTROL_XFIFO_OVRWR_EN_OVRWR	0x08
#define		BIT_CBUS_MDT_RCV_CONTROL_RFIFO_OVRWR_EN_MASK	0x10
#define		BIT_CBUS_MDT_RCV_CONTROL_RFIFO_OVRWR_EN_STALL	0x00
#define		BIT_CBUS_MDT_RCV_CONTROL_RFIFO_OVRWR_EN_OVRWR	0x10
#define		BIT_CBUS_MDT_RCV_CONTROL_RCV_EN_MASK			0x80
#define		BIT_CBUS_MDT_RCV_CONTROL_RCV_EN_DISABLE			0x00
#define		BIT_CBUS_MDT_RCV_CONTROL_RCV_EN_ENABLE			0x80

#define	REG_CBUS_MDT_RCV_READ_PORT						TX_PAGE_CBUS, 0x87
#define	REG_CBUS_MDT_XMIT_CONTROL						TX_PAGE_CBUS, 0x88
#define	REG_CBUS_MDT_XMIT_WRITE_PORT					TX_PAGE_CBUS, 0x89
#define	REG_CBUS_MDT_RFIFO_STAT							TX_PAGE_CBUS, 0x8A
#define	REG_CBUS_MDT_XFIFO_STAT							TX_PAGE_CBUS, 0x8B

#define	REG_CBUS_MDT_INT_0								TX_PAGE_CBUS, 0x8C
#define		BIT_MDT_RXFIFO_DATA_RDY						0x01
#define		BIT_MDT_MSC_XFIFO_FULL						0x02
#define		BIT_MDT_STATE_MACH_IDLE						0x04
#define		BIT_MDT_XFIFO_EMPTY							0x08

#define	REG_CBUS_MDT_INT_0_MASK							TX_PAGE_CBUS, 0x8D
#define	REG_CBUS_MDT_INT_1								TX_PAGE_CBUS, 0x8E
#define	REG_CBUS_MDT_INT_1_MASK							TX_PAGE_CBUS, 0x8F
#define	SPAD_XFIFO_STAT									TX_PAGE_CBUS, 0x8B

#define	REG_CBUS_STATUS									TX_PAGE_CBUS, 0x91
#define		BIT_CBUS_CONNECTED							0x01
#define		BIT_MHL_MODE								0x02
#define		BIT_CBUS_HPD								0x04
#define		BIT_MSC_HB_SUCCESS							0x08
#define		BIT_MHL_CABLE_PRESENT						0x10

#define	REG_CBUS_INT_0									TX_PAGE_CBUS, 0x92
#define		BIT_CBUS_CNX_CHG							0x01
#define		BIT_CBUS_MSC_MT_DONE						0x02
#define		BIT_CBUS_HPD_RCVD							0x04
#define		BIT_CBUS_MSC_MR_WRITE_STAT					0x08
#define		BIT_CBUS_MSC_MR_MSC_MSG						0x10
#define		BIT_CBUS_MSC_MR_WRITE_BURST					0x20
#define		BIT_CBUS_MSC_MR_SET_INT						0x40
#define		BIT_CBUS_MSC_MT_DONE_NACK					0x80

#define	REG_CBUS_INT_0_MASK								TX_PAGE_CBUS, 0x93

#define	REG_CBUS_INT_1									TX_PAGE_CBUS, 0x94
#define		BIT_CBUS_DDC_ABRT							0x04
#define		BIT_CBUS_MSC_ABORT_RCVD						0x08
#define		BIT_CBUS_CMD_ABORT							0x40

#define	REG_CBUS_INT_1_MASK								TX_PAGE_CBUS, 0x95

#define	REG_CBUS_DDC_ABORT_INT							TX_PAGE_CBUS, 0x98
#define		BIT_CBUS_DDC_MAX_FAIL						0x01
#define		BIT_CBUS_DDC_PROTO_ERR						0x02
#define		BIT_CBUS_DDC_TIMEOUT						0x04
#define		BIT_CBUS_DDC_PEER_ABORT						0x80

#define	REG_CBUS_MSC_MT_ABORT_INT						TX_PAGE_CBUS, 0x9A
#define		BIT_CBUS_MSC_MT_ABORT_INT_MAX_FAIL			0x01
#define		BIT_CBUS_MSC_MT_ABORT_INT_PROTO_ERR			0x02
#define		BIT_CBUS_MSC_MT_ABORT_INT_TIMEOUT			0x04
#define		BIT_CBUS_MSC_MT_ABORT_INT_UNDEF_CMD			0x08
#define		BIT_CBUS_MSC_MT_ABORT_INT_MSC_MT_PEER_ABORT	0x80

#define	REG_MSC_RCV_ERROR								TX_PAGE_CBUS, 0x9C
#define		BIT_CBUS_MSC_MT_ABORT_INT_MAX_FAIL			0x01
#define		BIT_CBUS_MSC_MT_ABORT_INT_PROTO_ERR			0x02
#define		BIT_CBUS_MSC_MT_ABORT_INT_TIMEOUT			0x04
#define		BIT_CBUS_MSC_MT_ABORT_INT_UNDEF_CMD			0x08
#define		BIT_CBUS_MSC_MT_ABORT_INT_MSC_MT_PEER_ABORT	0x80

#define	REG_CBUS_LINK_XMIT_BIT_TIME						TX_PAGE_CBUS, 0xA7

#define	REG_CBUS_MSC_COMMAND_START						TX_PAGE_CBUS, 0xB8
#define		BIT_CBUS_MSC_PEER_CMD						0x01
#define		BIT_CBUS_MSC_MSG							0x02
#define		BIT_CBUS_MSC_READ_DEVCAP					0x04
#define		BIT_CBUS_MSC_WRITE_STAT_OR_SET_INT			0x08
#define		BIT_CBUS_MSC_WRITE_BURST					0x10

#define	REG_CBUS_MSC_CMD_OR_OFFSET						TX_PAGE_CBUS, 0xB9
#define	REG_CBUS_MSC_1ST_TRANSMIT_DATA					TX_PAGE_CBUS, 0xBA
#define	REG_CBUS_MSC_2ND_TRANSMIT_DATA					TX_PAGE_CBUS, 0xBB
#define	REG_CBUS_PRI_RD_DATA_1ST						TX_PAGE_CBUS, 0xBC
#define	REG_CBUS_PRI_RD_DATA_2ND						TX_PAGE_CBUS, 0xBD
#define	REG_CBUS_MSC_MR_MSC_MSG_RCVD_1ST_DATA			TX_PAGE_CBUS, 0xBF
#define	REG_CBUS_MSC_MR_MSC_MSG_RCVD_2ND_DATA			TX_PAGE_CBUS, 0xC0
#define	REG_WBURST_RCVD_DATA_CNT						TX_PAGE_CBUS, 0xC3

#define	REG_CBUS_MSC_WRITE_BURST_DATA_LEN				TX_PAGE_CBUS, 0xC6
#define		MSC_WRITE_BURST_LEN_MASK					0x0F

#define	REG_CBUS_DDC_TIMEOUT							TX_PAGE_CBUS, 0xD1
#define	REG_CBUS_MISC_CONTROL							TX_PAGE_CBUS, 0xD8
